[build-system]
requires = ["setuptools >= 77.0.3"]
build-backend = "setuptools.build_meta"

[project]
name = "archery_antalya_analysis"
version = "0.1.0"
description = "Data Analysis of the World Archery 2025 Antalya world cup leg."
authors = [
  { name="Jack Atkinson", email="jack.atkinson1000@gmail.com" },
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Natural Language :: English",
]
dependencies = [
    "archeryutils @ git+https://github.com/jatkinson1000/archeryutils.git",
    "numpy",
    "notebook",
    "pandas",
    "matplotlib",
    "scipy",
    "beautifulsoup4",
    "lxml",
]

[project.optional-dependencies]
lint = [
    "ruff",
    "mypy>=1.16.0",
]

[project.urls]
"Homepage" = "https://github.com/jatkinson1000/archery-antalya-analysis"
"Bug Tracker" = "https://github.com/jatkinson1000/archery-antalya-analysis/Issues"

[tool.ruff]
# Run linting and formatting on notebooks
extend-include = ["*.ipynb"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules for full details of each ruleset.

# Enable:  D: `pydocstyle`, PL: `pylint`, I: `isort`, W: `pycodestyle whitespace`
#          NPY: `numpy`, FLY: `flynt`, F: `pyflakes`, RUF: `ruff`
#          From flake8: "ARG", "SLF", "S", "BLE", "B", "A", "C4", "EM", "ICN",
#                       "PIE", "Q", "RSE", "SIM", "TID"
select = ["D", "PL", "I", "E", "W", "NPY", "FLY", "F", "RUF",
          "ARG", "SLF", "S", "BLE","B", "A", "C4", "EM", "ICN", "PIE", "Q", "RSE",
          "SIM", "TID"]

# Enable D417 (Missing argument description) on top of the NumPy convention.
extend-select = ["D417"]

# Ignore SIM108 (use ternary instead of if-else) as I think it can obscure intent.
# Ignore RUF002 (ambiguous characters) as it does not allow apostrophes in strings.
ignore = ["SIM108", "RUF002"]

[tool.ruff.lint.pydocstyle]
# Use NumPy convention for checking docstrings
convention = "numpy"

[tool.mypy]
warn_unused_configs = true
